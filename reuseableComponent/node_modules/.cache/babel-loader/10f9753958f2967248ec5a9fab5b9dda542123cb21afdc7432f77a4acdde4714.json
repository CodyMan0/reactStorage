{"ast":null,"code":"var _jsxFileName = \"/Users/leejuyoung/Desktop/codeStorage/reuseableComponent/src/examples/0-SelectableList/SelectableList/SelectableList.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport classes from './SelectableList.module.css';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst takeId = _ref => {\n  let {\n    id\n  } = _ref;\n  return id;\n};\nexport function SelectableList(_ref2) {\n  _s();\n  let {\n    items,\n    renderItem = takeId\n  } = _ref2;\n  const [selectedItem, setSelectedItem] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleToggle = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.listWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.selectedValue,\n      onClick: handleToggle,\n      children: selectedItem ? renderItem(selectedItem) : 'Nothing is selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: clsx(classes.list, isOpen && classes.visible),\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: clsx(classes.item, item.id === (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id) && classes.selected),\n        onClick: () => {\n          setIsOpen(false);\n          setSelectedItem(item);\n        },\n        children: renderItem(item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectableList, \"qAJ/dgYehmhQpCloS0qTcnbnnWI=\");\n_c = SelectableList;\nvar _c;\n$RefreshReg$(_c, \"SelectableList\");","map":{"version":3,"names":["useState","classes","clsx","jsxDEV","_jsxDEV","takeId","_ref","id","SelectableList","_ref2","_s","items","renderItem","selectedItem","setSelectedItem","isOpen","setIsOpen","handleToggle","className","listWrapper","children","selectedValue","onClick","fileName","_jsxFileName","lineNumber","columnNumber","list","visible","map","item","selected","_c","$RefreshReg$"],"sources":["/Users/leejuyoung/Desktop/codeStorage/reuseableComponent/src/examples/0-SelectableList/SelectableList/SelectableList.tsx"],"sourcesContent":["import { ReactNode, useState } from 'react';\nimport classes from './SelectableList.module.css';\nimport clsx from 'clsx';\n\ntype SelectItem = { id: string };\n\ntype SelectableListProps<T> = {\n  items: T[];\n  renderItem?: (item: T) => ReactNode;\n};\n\nconst takeId = ({ id }: SelectItem) => id;\n\nexport function SelectableList<T extends SelectItem>({\n  items,\n  renderItem = takeId,\n}: SelectableListProps<T>) {\n  const [selectedItem, setSelectedItem] = useState<T>();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n\n  return (\n    <div className={classes.listWrapper}>\n      <div className={classes.selectedValue} onClick={handleToggle}>\n        {selectedItem ? renderItem(selectedItem) : 'Nothing is selected'}\n      </div>\n      <ul className={clsx(classes.list, isOpen && classes.visible)}>\n        {items.map((item) => (\n          <li\n            className={clsx(classes.item, item.id === selectedItem?.id && classes.selected)}\n            key={item.id}\n            onClick={() => {\n              setIsOpen(false);\n              setSelectedItem(item);\n            }}\n          >\n            {renderItem(item)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxB,MAAMC,MAAM,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAe,CAAC,GAAAD,IAAA;EAAA,OAAKC,EAAE;AAAA;AAEzC,OAAO,SAASC,cAAcA,CAAAC,KAAA,EAGH;EAAAC,EAAA;EAAA,IAH0B;IACnDC,KAAK;IACLC,UAAU,GAAGP;EACS,CAAC,GAAAI,KAAA;EACvB,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,EAAK;EACrD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMiB,YAAY,GAAGA,CAAA,KAAM;IACzBD,SAAS,CAAED,MAAM,IAAK,CAACA,MAAM,CAAC;EAChC,CAAC;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAEjB,OAAO,CAACkB,WAAY;IAAAC,QAAA,gBAClChB,OAAA;MAAKc,SAAS,EAAEjB,OAAO,CAACoB,aAAc;MAACC,OAAO,EAAEL,YAAa;MAAAG,QAAA,EAC1DP,YAAY,GAAGD,UAAU,CAACC,YAAY,CAAC,GAAG;IAAqB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D,eACNtB,OAAA;MAAIc,SAAS,EAAEhB,IAAI,CAACD,OAAO,CAAC0B,IAAI,EAAEZ,MAAM,IAAId,OAAO,CAAC2B,OAAO,CAAE;MAAAR,QAAA,EAC1DT,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACd1B,OAAA;QACEc,SAAS,EAAEhB,IAAI,CAACD,OAAO,CAAC6B,IAAI,EAAEA,IAAI,CAACvB,EAAE,MAAKM,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEN,EAAE,KAAIN,OAAO,CAAC8B,QAAQ,CAAE;QAEhFT,OAAO,EAAEA,CAAA,KAAM;UACbN,SAAS,CAAC,KAAK,CAAC;UAChBF,eAAe,CAACgB,IAAI,CAAC;QACvB,CAAE;QAAAV,QAAA,EAEDR,UAAU,CAACkB,IAAI;MAAC,GANZA,IAAI,CAACvB,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAAChB,EAAA,CAhCeF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}